<?xml version="1.0" encoding="UTF-8"?>
<microservice>
	<!-- Basic Spring Boot Template for spring initializer -->
	<projectName>microservicetemplate</projectName>
	<basePackage>com.capgemini.servicetemplate</basePackage>
	<springbootversion>2.3.4.RELEASE</springbootversion>
	<projectversion>0.1</projectversion>
	<packagingType>jar</packagingType>
	<projectcreationpath>C://Users//anaupadh//Documents//projects</projectcreationpath>
	<springbootclipath>C://Users//anaupadh//Downloads//spring-boot-cli-2.3.4.RELEASE-bin//spring-2.3.4.RELEASE//bin</springbootclipath>
	
	<!-- controller -->
	<controllers>
		<packagename>controller</packagename>
		<controller>
			<classname>TemplateController</classname>
			<fields>
				<field>
					<name>templateService</name>
					<type>TemplateService</type>
					<modifier>private</modifier>
					<annotation>Autowired</annotation>
				</field>
			</fields>
			<methods>
				<method>
					<name>customerDetails</name>
					<returns>List</returns>
					<methodtype>GET</methodtype>
					<path>/customers</path>
					<parameters>
						<parameter>
							<name>firstName</name>
							<type>String</type>
							<annotation>RequestParam</annotation>
						</parameter>
						<parameter>
							<name>lastName</name>
							<type>String</type>
							<annotation>RequestParam</annotation>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>createCustomer</name>
					<returns>Customer</returns>
					<methodtype>POST</methodtype>
					<path>/customers</path>
					<parameters>
						<parameter>
							<name>customer</name>
							<type>Customer</type>
							<annotation>RequestBody</annotation>
						</parameter>
					</parameters>
				</method>
			</methods>
		</controller>
	</controllers>

	<!-- Configurations -->

	<configurations>
		<packagename>config</packagename>
		<configuration>
			<classname>Config</classname>
			<methods>
				<method>
					<name>configureTemplate</name>
					<returns>String</returns>
					<parameters>
						<parameter>
							<name>name</name>
							<type>String</type>
						</parameter>
						<parameter>
							<name>id</name>
							<type>integer</type>
						</parameter>
					</parameters>
				</method>
			</methods>
		</configuration>
		<configuration>
			<classname>SecurityConfig</classname>
		</configuration>
	</configurations>

	<!-- Model -->
	<models>
		<packagename>model</packagename>
		<model>
			<classname>Account</classname>
			<attributes>
				<attribute>
					<name>accountId</name>
					<type>String</type>
				</attribute>
				<attribute>
					<name>accountHolderName</name>
					<type>String</type>
				</attribute>
			</attributes>
		</model>
		<model>
			<classname>Customer</classname>
			<attributes>
				<attribute>
					<name>firstName</name>
					<type>String</type>
				</attribute>
				<attribute>
					<name>lastName</name>
					<type>String</type>
				</attribute>
			</attributes>
		</model>
	</models>

	<!-- Service -->

	<service>
		<packagename>service</packagename>
		<interfaces>
			<interface>
				<interfacename>TemplateService</interfacename>
				<methods>
					<method>
						<name>validateCustomer</name>
						<returns>String</returns>
						<parameters>
							<parameter>
								<name>customer</name>
								<type>Customer</type>
							</parameter>
							<parameter>
								<name>id</name>
								<type>integer</type>
							</parameter>
						</parameters>
					</method>
				</methods>
			</interface>
		</interfaces>
		<implementations>
			<implementation>
				<classname>TemplateServiceImpl</classname>
				<implements>TemplateService</implements>
				<fields>
					<field>
						<name>templateDao</name>
						<type>TemplateDao</type>
						<modifier>private</modifier>
						<annotation>Autowired</annotation>
					</field>
				</fields>
			</implementation>
		</implementations>
	</service>

	<!-- Backend Integration -->
	<BackendIntegration>
		<messaging>
			<packagename>handler</packagename>
			<interfaces>
				<interface>
					<interfacename>MessageHandler</interfacename>
					<methods>
						<method>
							<name>handle</name>
							<parameters>
								<parameter>
									<name>message</name>
									<type>String</type>
								</parameter>
								<parameter>
									<name>id</name>
									<type>integer</type>
								</parameter>
							</parameters>
						</method>
					</methods>
				</interface>
			</interfaces>
			<implementations>
				<implementation>
					<classname>MessageHandlerImpl</classname>
					<implements>MessageHandler</implements>
					<fields>
						<field>
							<name>templateDao</name>
							<type>TemplateDao</type>
							<modifier>private</modifier>
							<annotation>Autowired</annotation>
						</field>
					</fields>
				</implementation>
			</implementations>
			<brokers>
				<broker>
					<type>Kafka</type>
					<producer>
						<name>Producer</name>
						<fields>
							<field>
								<name>kafkaTemplate</name>
								<type>KafkaTemplate</type>
								<modifier>public</modifier>
								<annotation>Autowired</annotation>
							</field>
						</fields>
						<methods>
							<method>
								<name>sendMessage</name>
								<annotation>
									<name>KafkaListener</name>
									<members>
										<member>
											<name>topics</name>
											<value>users</value>
										</member>
										<member>
											<name>groupId</name>
											<value>groupid</value>
										</member>
									</members>
								</annotation>
								<returns>String</returns>
								<parameters>
									<parameter>
										<name>message</name>
										<type>String</type>
									</parameter>
								</parameters>
							</method>
						</methods>
					</producer>
					<consumer>
						<name>Consumer</name>
						<methods>
							<method>
								<name>consume</name>
								<annotation>
									<name>KafkaListener</name>
									<members>
										<member>
											<name>topics</name>
											<value>users</value>
										</member>
										<member>
											<name>groupId</name>
											<value>groupid</value>
										</member>
									</members>
								</annotation>
								<parameters>
									<parameter>
										<name>message</name>
										<type>String</type>
									</parameter>
								</parameters>
							</method>
						</methods>
					</consumer>
				</broker>
			</brokers>
		</messaging>
		<dao>
			<packagename>dao</packagename>
			<interfaces>
				<interface>
					<interfacename>TemplateDao</interfacename>
					<methods>
						<method>
							<name>validateCustomer</name>
							<returns>String</returns>
							<parameters>
								<parameter>
									<name>customer</name>
									<type>Customer</type>
								</parameter>
								<parameter>
									<name>id</name>
									<type>integer</type>
								</parameter>
							</parameters>
						</method>
					</methods>
				</interface>
			</interfaces>
			<implementations>
				<implementation>
					<classname>TemplateDaoImpl</classname>
					<implements>TemplateDao</implements>
					<fields>
						<field>
							<name>mongoTemplate</name>
							<type>MongoTemplate</type>
							<modifier>public</modifier>
							<annotation>Autowired</annotation>
						</field>
					</fields>
				</implementation>
			</implementations>
			<databases>
				<database>
					<type>MongoDataBase</type> 
					<!-- Define Database Name for Eg: MySql, MongoDataBase, OracleDB -->
 					<repositories>
						<repository>
							<name>CustomerRepository</name>
							<modelname>Customer</modelname>
							<idtype>String</idtype>
							<methods>
								<method>
									<name>findByLastName</name>
									<returns>Customer</returns>
									<parameters>
										<parameter>
											<name>lastName</name>
											<type>String</type>
										</parameter>
									</parameters>
								</method>
								<method>
									<name>findByFirstName</name>
									<returns>Customer</returns>
									<parameters>
										<parameter>
											<name>firstName</name>
											<type>String</type>
										</parameter>
									</parameters>
								</method>
							</methods>
						</repository>
					</repositories>
				</database>
			</databases>
		</dao>
	</BackendIntegration>

	<!-- Plugins -->

	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
			</configuration>
		</plugin>

		<plugin>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco.version}</version>
			<executions>
				<execution>
					<id>default-prepare-agent</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
				</execution>
				<execution>
					<id>jacoco-report</id>
					<goals>
						<goal>report</goal>
					</goals>
					<configuration>
						<outputDirectory>target/jacoco-report</outputDirectory>
					</configuration>
				</execution>
				<execution>
					<id>default-check</id>
					<goals>
						<goal>check</goal>
					</goals>
					<configuration>
						<rules>
							<rule>
								<element>BUNDLE</element>
								<limits>
									<limit>
										<counter>COMPLEXITY</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.code.coverage}</minimum>
									</limit>
								</limits>
							</rule>
							<rule>
								<element>PACKAGE</element>
								<limits>
									<limit>
										<counter>BRANCH</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.code.coverage}</minimum>
									</limit>
								</limits>
							</rule>
						</rules>
					</configuration>
				</execution>
			</executions>
		</plugin>

		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-checkstyle-plugin</artifactId>
			<version>${maven.checksyle.plugin}</version>
			<configuration>
				<configLocation>${checkstyle.configLocation}</configLocation>
				<suppressionsLocation>${checkstyle.suppressionLocation}
				</suppressionsLocation>
			</configuration>
			<executions>
				<execution>
					<goals>
						<goal>check</goal>
					</goals>
				</execution>
			</executions>
		</plugin>

		<!-- Default it will check for following rules basic.xml empty.xml imports.xml 
			unnecessary.xml unusedcode.xml -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-pmd-plugin</artifactId>
			<version>${pmd.version}</version>
			<configuration>
				<linkXRef>false</linkXRef>
				<outputDirectory>target/pmd-report</outputDirectory>
				<excludes>
					<exclude>**/generated/*.java</exclude>
				</excludes>
			</configuration>
			<executions>
				<execution>
					<goals>
						<goal>check</goal>
					</goals>
				</execution>
			</executions>
		</plugin>

		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<configuration>
				<systemPropertyVariables>
					<pact.rootDir>pacts</pact.rootDir>
					<buildDirectory>${project.build.directory}</buildDirectory>
				</systemPropertyVariables>
			</configuration>
		</plugin>

	</plugins>
	
	<!-- For Spring Supported Dependencies refer the Document SupportedDependencies.txt -->
	<projectSpringDependencies>
		<dependency>
			<artifactId>lombok</artifactId>
		</dependency>
	</projectSpringDependencies>
	<!-- External Dependencies -->
	<ExternalDependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>2.6.1</version>
		</dependency>
		<!-- Pact Dependencies -->
		<dependency>
			<groupId>au.com.dius</groupId>
			<artifactId>pact-jvm-consumer-junit_2.12</artifactId>
			<version>${pact.jvm.consumer}</version>
		</dependency>
		<dependency>
			<groupId>au.com.dius</groupId>
			<artifactId>pact-jvm-provider-junit_2.12</artifactId>
			<version>${pact.jvm.provider}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>2.0.2-beta</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>3.0.4.RELEASE</version>
		</dependency>

	</ExternalDependencies>

	
	<!-- Properties -->
	<properties>
		<property>
			<key>java.version</key>
			<value>1.8</value>
		</property>
		<property>
			<key>jacoco.version</key>
			<value>0.8.3</value>
		</property>
		<property>
			<key>jacoco.code.coverage</key>
			<value>0%</value>
		</property>
		<property>
			<key>maven.checksyle.plugin</key>
			<value>3.1.1</value>
		</property>
		<property>
			<key>pmd.version</key>
			<value>3.13.0</value>
		</property>
		<property>
			<key>pact.jvm.consumer</key>
			<value>3.5.10</value>
		</property>
		<property>
			<key>pact.jvm.provider</key>
			<value>3.5.10</value>
		</property>
		<property>
			<key>maven.surefire.plugin</key>
			<value>2.18</value>
		</property>
		<property>
			<key>maven.deploy.plugin</key>
			<value>2.8.2</value>
		</property>
		<property>
			<key>nexus.staging.plugin</key>
			<value>1.6.8</value>
		</property>
		<property>
			<key>swagger.version</key>
			<value>2.9.2</value>
		</property>
		<property>
			<key>checkstyle.configLocation</key>
			<value>src/main/resources/checkstyle.xml</value>
		</property>
		<property>
			<key>checkstyle.suppressionLocation</key>
			<value>src/main/resources/suppressions.xml</value>
		</property>
	</properties>


</microservice>
